apiVersion: apps/v1
kind: Deployment
metadata:
  name: iotedged
  namespace: {{ include "edge-kubernetes.namespace" . | quote }}
  labels:
    app.kubernetes.io/name: {{ include "edge-kubernetes.name" . }}-iotedged
    helm.sh/chart: {{ include "edge-kubernetes.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "edge-kubernetes.name" . }}-iotedged
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "edge-kubernetes.name" . }}-iotedged
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.iotedged.certificates }}
      {{- if .Values.iotedged.certificates.secret }}
      initContainers:
        - name: init-ca
          command:
          - sh
          - -c
          - |
            mkdir /etc/ssl/certs
            cp -f /etc/aziot/certificates/iotedge_config_cli_root.pem /usr/local/share/ca-certificates/iotedge_config_cli_root.pem.crt
            update-ca-certificates
          image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
          volumeMounts:
          - name: edge-certs
            mountPath: "/etc/aziot/certificates"
            readOnly: true
          - name: etc-ssl
            mountPath: "/etc/ssl"
          - name: ca-certificates
            mountPath: "/usr/local/share/ca-certificates"
      {{- end}}
      {{- end}}
      containers:
        - name: aziot-identityd
          image: "{{ .Values.identityd.image.repository }}:{{ .Values.identityd.image.tag }}"
          imagePullPolicy: {{ .Values.identityd.image.pullPolicy }}
          command: ["/usr/libexec/aziot-identity-service/aziot-identityd"]
          volumeMounts:
          - name: aziot-identityd-config
            mountPath: "/etc/aziot/identityd/config.d/00-super.toml"
            subPath: 00-super.toml
            readOnly: true
          - name: aziot-socket
            mountPath: /run/aziot
          {{- with .Values.iotedged.certificates }}
          {{- if .secret }}
          - name: edge-certs
            mountPath: "/etc/aziot/certificates"
            readOnly: true
          - name: etc-ssl
            mountPath: "/etc/ssl"
          - name: ca-certificates
            mountPath: "/usr/local/share/ca-certificates"
          {{- end}}
          {{- end}}
        - name: aziot-keyd
          image: "{{ .Values.keyd.image.repository }}:{{ .Values.keyd.image.tag }}"
          imagePullPolicy: {{ .Values.keyd.image.pullPolicy }}
          command: ["/usr/libexec/aziot-identity-service/aziot-keyd"]
          volumeMounts:
          - name: aziot-keyd-config
            mountPath: "/etc/aziot/keyd/config.d/00-super.toml"
            subPath: 00-super.toml
            readOnly: true
          - name: aziot-device-id
            mountPath: "/var/secrets/aziot/keyd/device-id"
            subPath: device-id
            readOnly: true
          - name: aziot-socket
            mountPath: /run/aziot
          {{- with .Values.iotedged.certificates }}
          {{- if .secret }}
          - name: edge-certs
            mountPath: "/etc/aziot/certificates"
            readOnly: true
          {{- end}}
          {{- end}}
        - name: aziot-certd
          image: "{{ .Values.certd.image.repository }}:{{ .Values.certd.image.tag }}"
          imagePullPolicy: {{ .Values.certd.image.pullPolicy }}
          command: ["/usr/libexec/aziot-identity-service/aziot-certd"]
          volumeMounts:
          - name: aziot-certd-config
            mountPath: "/etc/aziot/certd/config.d/00-super.toml"
            subPath: 00-super.toml
            readOnly: true
          - name: aziot-socket
            mountPath: /run/aziot
          {{- with .Values.iotedged.certificates }}
          {{- if .secret }}
          - name: edge-certs
            mountPath: "/etc/aziot/certificates"
            readOnly: true
          {{- end}}
          {{- end}}
        - name: iotedged
          image: "{{ .Values.iotedged.image.repository }}:{{ .Values.iotedged.image.tag }}"
          imagePullPolicy: {{ .Values.iotedged.image.pullPolicy }}
          command: ["/app/aziot-edged"]
          #command: ["sh", "-c", "sleep 300000"]
          securityContext:
            runAsUser: 0
          {{- if .Values.iotedged.data.resources }}
          resources:
{{ toYaml .Values.iotedged.data.resources | indent 12 }}
          {{- end }}
          env:
          {{- if .Values.iotedged.data.httpsProxy }}
          - name: "https_proxy"
            value: {{ .Values.iotedged.data.httpsProxy | quote}}
          {{- end}}
          {{- if .Values.iotedged.data.noProxy }}
          - name: "no_proxy"
            value: {{ .Values.iotedged.data.noProxy | quote}}
          {{- end}}
          - name: "IOTEDGE_LOG"
          {{- if .Values.iotedged.data.runtimeLogLevel}}
            value: {{ .Values.iotedged.data.runtimeLogLevel | quote }}
          {{- else }}
            value: "info"
          {{- end }}
          volumeMounts:
          - name: config
            mountPath: "/etc/aziot/edged"
            readOnly: true
          - name: aziot-socket
            mountPath: /run/aziot
          - name: edge-home
            mountPath: {{ .Values.iotedged.data.targetPath | quote }}
          {{- with .Values.iotedged.certificates }}
          {{- if .secret }}
          - name: edge-certs
            mountPath: "/etc/aziot/certificates"
            readOnly: true
          {{- end}}
          {{- end}}
          {{- if .Values.iotedged.data.useHostTrust }}
          - name: ca-edge-host-trust
            mountPath: "/etc/ssl/certs"
          {{- end }}
          {{- with .Values.provisioning.authentication }}
          {{- if .identitySecret }}
          - name: edge-authentication
            mountPath: "/etc/edge-authentication"
            readOnly: true
          {{- end}}
          {{- end}}
          {{- with .Values.provisioning.attestation }}
          {{- if .identitySecret }}
          - name: edge-attestation
            mountPath: "/etc/edge-attestation"
            readOnly: true
          {{- end}}
          {{- end}}
          ports:
            - name: management
              containerPort: {{ .Values.iotedged.ports.management }}
              protocol: TCP
            - name: workload
              containerPort: {{ .Values.iotedged.ports.workload }}
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    scheme: HTTPS
          #    path: "/systeminfo?api-version={{ .Values.iotedged.apiVersion }}"
          #    port: {{ .Values.iotedged.ports.management }}
          #readinessProbe:
          #  httpGet:
          #    scheme: HTTPS
          #    path: "/systeminfo?api-version={{ .Values.iotedged.apiVersion }}"
          #    port: {{ .Values.iotedged.ports.management }}
      serviceAccount: "iotedged"
      {{- /* Render image pull secrets if they have been provided. */ -}}
      {{- if .Values.registryCredentials }}
      imagePullSecrets:
        - name: regcreds
      {{ end }}
      #securityContext:
      #  runAsNonRoot: true
      #  runAsUser: 1000
      {{- if .Values.iotedged.fsGroup }}
        fsGroup: {{ .Values.iotedged.fsGroup }}
      {{ end }}
{{- if .Values.iotedged.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.iotedged.nodeSelector | indent 8 }}
{{- end }}
      volumes:
      - name: aziot-socket
        emptyDir: {}
      - name: aziot-identityd-config
        secret:
          secretName: identityd-config
          items:
          - key: 00-super.toml
            path: 00-super.toml
      - name: aziot-keyd-config
        secret:
          secretName: keyd-config
          items:
          - key: 00-super.toml
            path: 00-super.toml
      - name: aziot-certd-config
        secret:
          secretName: certd-config
          items:
          - key: 00-super.toml
            path: 00-super.toml
      - name: aziot-device-id
        secret:
          secretName: aziot-device-id
          items:
          - key: device-id
            path: device-id
      - name: config
        secret:
          secretName: iotedged-config
      {{- with .Values.provisioning.authentication }}
      {{- if .identitySecret }}
      {{- /*
      NOTE: This sets up iotedged with a volume "/etc/edge-authentication" populated with authentication certs.
    */}}
      - name: edge-authentication
        secret:
          secretName: {{ .identitySecret }}
          items:
          - key: {{ .identityCert | default "identity_certificate.pem" }}
            path: identity_cert
          - key: {{ .identityPk | default "identity_key.pem" }}
            path: identity_pk
      {{- end}}
      {{- end}}
      {{- with .Values.provisioning.attestation }}
      {{- if .identitySecret }}
      {{- /*
      NOTE: This sets up iotedged with a volume "/etc/edge-attestation" populated with the attestation certs.
    */}}
      - name: edge-attestation
        secret:
          secretName: {{ .identitySecret }}
          items:
          - key: {{ .identityCert | default "identity_certificate.pem" }}
            path: identity_cert
          - key: {{ .identityPk | default "identity_key.pem" }}
            path: identity_pk
      {{- end}}
      {{- end}}
      {{- if .Values.iotedged.data.useHostTrust }}
      - name: ca-edge-host-trust
        hostPath:
          path: /etc/ssl/certs
          type: Directory
      {{- end}}
      {{- with .Values.iotedged.certificates }}
      {{- if .secret }}
      {{- /*
        NOTE: This sets up iotedged with a volume "/etc/edgecerts" populated with the given CA certs.
      */}}
      - name: etc-ssl
        emptyDir: {}
      - name: ca-certificates
        emptyDir: {}
      - name: edge-certs
        secret:
          secretName: {{ .secret }}
          items:
          - key: {{ .aziot_edged_ca_cert | default "aziot_edged_ca_cert" }}
            path: aziot-edged-ca.full-chain.cert.pem
          - key: {{ .aziot_edged_ca_pk | default "aziot_edged_ca_pk" }}
            path: aziot-edged-ca.key.pem
          - key: {{ .trusted_ca_certs | default "trusted_ca_certs" }}
            path: iotedge_config_cli_root.pem

      {{- end}}
      {{- else}}
      {{- /*
        NOTE: This sets up iotedged in the "quickstart" mode which is NOT meant
        for production use. For PoCs though, its wonderful! For production, this
        volume should probably be populated with proper CA certs.
      */}}
      {{- end}}
      - name: edge-home
        {{- if .Values.iotedged.data.persistentVolumeClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.iotedged.data.persistentVolumeClaim.name }}
          readOnly: false
        {{ else }}
        emptyDir: {}
        {{ end -}}
